package com.free.system.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.nutz.dao.Cnd;
import org.nutz.dao.QueryResult;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.free.common.utils.NewPager;
import com.free.common.utils.SearchFilter;
import com.free.common.utils.web.Servlets;
import com.free.dblz.service.RepresentInfoService;
import com.free.system.model.Group;
import com.free.system.model.User;
import com.free.system.service.GroupService;
import com.free.system.service.UserService;

/**
 * 工作部门
 * 模板自动生成   for FreeUI
 * @author mefly
 *
 */
@Controller
@RequestMapping(value="/system/group")
public class GroupController {

	@Resource
	private GroupService service;
	@Resource
	private UserService userService;
	@Resource
	private RepresentInfoService representInfoService;
	
	/*
	 * 列表json
	 */
	@RequestMapping("/ajax_list")
	@ResponseBody
	public QueryResult list(HttpServletRequest request,
			@RequestParam(value="page",defaultValue="1") int page,
			@RequestParam(value="pagesize",defaultValue="10") int pagesize ){
		
		Map<String, Object> searchParams = Servlets.getParametersStartingWith(request, "search_");
		Map<String, SearchFilter> filters = SearchFilter.parse(searchParams);
		
		NewPager pager = new NewPager();
		pager.setPageNumber(page);
		pager.setPageSize(pagesize);
		pager.setFilters(filters);
		
		return service.queryPage(pager);
	}
	/*
	 * 列表json
	 */
	@RequestMapping("/ajax_tree")
	@ResponseBody
	public List<Group> tree(HttpServletRequest request ){
		
		List<Group> list = service.query(null);
		return list;
	}

	/*
	 * 部门及人员tree
	 */
	@RequestMapping("/ajax_depUserTree")
	@ResponseBody
	public List<Group> depUserTree(HttpServletRequest request ,
			@RequestParam(value="id",defaultValue="0",required=false) int id,
			@RequestParam(value="xm",defaultValue="",required=false) String xm){
		

		
		return null;
	}
	/*
	 * 录入
	 */
	@RequestMapping("/input")
	public String input(HttpServletRequest request,
			@RequestParam(value="pid",defaultValue="0") int pid,
			@RequestParam(value="id",defaultValue="0") int id){
		if (id>0){
			Group group = service.fetch(id);
			request.setAttribute("ob", group);
		}else{
			
		}
//		//点击常委新增时，可以选多个代表与之对应
//		if (group!=null && 1==group.getPid()){
//			request.setAttribute("multiple", "multiple");
//			List<Group> lChildren = service.query(Cnd.where("pid","=", group.getId()));
//			request.setAttribute("lChildren", lChildren);
//		}
		request.setAttribute("pid", pid);
		
		request.setAttribute("users", representInfoService.getUsersForSelect2());
		return "jsp/system/input-group";	
	}
	
	/*
	 * 录入
	 */
	@RequestMapping("/inputGroup")
	public String inputGroup(HttpServletRequest request,
			@RequestParam(value="pid",defaultValue="0") int pid,
			@RequestParam(value="id",defaultValue="0") int id){
		Group group = service.fetch(id);
		if (group==null){
			group = new Group();
		}else{
			request.setAttribute("ob", group);
		}
		request.setAttribute("pid", pid);

		return "jsp/system/inputgroup-group";	
	}
	
	/*
	 * 保存
	 */
	@RequestMapping("/save")
	@ResponseBody
	public String save(Group group,
						HttpServletRequest request){
		if (group.getTid()!=null){
			User user = userService.fetch(group.getTid());
			if (user!=null)
				group.setName(user.getXm());
		}
		if (group.getId()==null){
			service.insert(group);
		}else{
			service.update(group);
		}
		return "ok";	
	}
	
	/*
	 * 删除
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public String delete(HttpServletRequest request,
			@RequestParam(value="id",defaultValue="0") long id){
		service.deleteWidth(id);
		
		return "ok";	
	}
}